name: Build ImmortalWrt with Nikki and Custom Packages

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 19 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout user repo
        uses: actions/checkout@v4

      - name: Checkout ImmortalWrt source
        uses: actions/checkout@v4
        with:
          repository: immortalwrt/immortalwrt
          ref: v24.10.3
          path: immortalwrt-src

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /opt/hostedtoolcache/CodeQL
          df -h

      - name: Add Nikki feed
        working-directory: immortalwrt-src
        run: |
          echo "src-git nikki https://github.com/nikkinikki-org/OpenWrt-nikki.git;main" >> feeds.conf.default

      - name: Update & install feeds
        working-directory: immortalwrt-src
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Apply clean config
        working-directory: immortalwrt-src
        run: |
          cp $GITHUB_WORKSPACE/clean.config .config

          # ✅ 追加 packages.list 中的插件
          if [ -f $GITHUB_WORKSPACE/packages.list ]; then
            while read -r pkg; do
              [ -n "$pkg" ] && echo "CONFIG_PACKAGE_${pkg}=y" >> .config
            done < $GITHUB_WORKSPACE/packages.list
          fi

          make oldconfig

      - name: Verify iptables fully disabled
        working-directory: immortalwrt-src
        run: |
          echo "🔍 检查是否残留 iptables 配置..."
          if grep -E "CONFIG_PACKAGE_(iptables|fw3|kmod-ipt)-.*=y" .config; then
            echo "❌ 检测到残留 iptables 配置，请检查 clean.config 或 packages.list 是否引入依赖！"
            exit 1
          fi
          echo "✅ iptables 已完全禁用，使用纯 nftables 防火墙"

      - name: Prepare custom files (uci-custom + nikki)
        working-directory: immortalwrt-src
        run: |
          mkdir -p files/etc/uci-defaults
          cp $GITHUB_WORKSPACE/uci-custom files/etc/uci-defaults/99-custom-network
          chmod 0755 files/etc/uci-defaults/99-custom-network

          mkdir -p files/etc/config
          cp $GITHUB_WORKSPACE/nikki files/etc/config/nikki
          chmod 0777 files/etc/config/nikki

      - name: Cache downloads
        uses: actions/cache@v4
        with:
          path: immortalwrt-src/dl
          key: ${{ runner.os }}-immortalwrt-dl-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-immortalwrt-dl-

      - name: Build firmware
        working-directory: immortalwrt-src
        run: |
          make -j$(nproc) || make -j1 V=s

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-nikki
          path: immortalwrt-src/bin/targets/x86/64/*
          if-no-files-found: error
          retention-days: 14

      - name: Generate tag name
        id: tag
        run: |
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          TAG="auto-${DATE}-${SHORT_SHA}"
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - name: Upload firmware to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "ImmortalWrt Firmware ${{ env.TAG }}"
          draft: false
          prerelease: false
          files: immortalwrt-src/bin/targets/x86/64/*
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old releases
        uses: dev-drprasad/delete-older-releases@v0.3.3
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
