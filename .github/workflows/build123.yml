name: Build ImmortalWrt with Nikki and Custom Packages

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout ImmortalWrt source
        uses: actions/checkout@v4
        with:
          repository: immortalwrt/immortalwrt
          ref: v24.10.3   # 固定版本，避免 master 变动

      - name: Add Nikki feed
        run: |
          echo "src-git nikki https://github.com/nikkinikki-org/OpenWrt-nikki.git;main" >> feeds.conf.default
          cat feeds.conf.default

      - name: Update & install feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configure build
        run: |
          make defconfig

          # 从 packages.list 读取插件
          if [ -f ../packages.list ]; then
            while read -r pkg; do
              [ -n "$pkg" ] && echo "CONFIG_PACKAGE_${pkg}=y" >> .config
            done < ../packages.list
          fi

          # Nikki 包
          echo "CONFIG_PACKAGE_nikki=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-nikki=y" >> .config
          echo "CONFIG_PACKAGE_luci-i18n-nikki-zh-cn=y" >> .config

          # dnsmasq-full 替换 dnsmasq
          echo "CONFIG_PACKAGE_dnsmasq=n" >> .config
          echo "CONFIG_PACKAGE_dnsmasq-full=y" >> .config

          # 设置 ROOTFS_PARTSIZE=1024 (1GB)
          echo "CONFIG_TARGET_ROOTFS_PARTSIZE=1024" >> .config

          make defconfig

      - name: Prepare custom files (uci-custom)
        run: |
          mkdir -p files/etc/uci-defaults
          cp ../uci-custom files/etc/uci-defaults/99-custom-network
          chmod 0755 files/etc/uci-defaults/99-custom-network

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            dl
            build_dir
            staging_dir
          key: ${{ runner.os }}-immortalwrt-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-immortalwrt-

      - name: Build firmware
        run: |
          make -j$(nproc) || make -j1 V=s

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-nikki
          path: bin/targets/**/*
          if-no-files-found: error
          retention-days: 14

      - name: Generate tag name
        id: tag
        run: |
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          TAG="auto-${DATE}-${SHORT_SHA}"
          echo "TAG=${TAG}" >> $GITHUB_ENV
          echo "Generated tag: ${TAG}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "ImmortalWrt Firmware ${{ env.TAG }}"
          draft: false
          prerelease: false
          files: bin/targets/**/*   # 上传所有固件文件
