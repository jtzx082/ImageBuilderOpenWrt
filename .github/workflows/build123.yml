name: Build ImmortalWrt Firmware 123

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build x86-64 Firmware

    steps:
    - name: Checkout workflow repo
      uses: actions/checkout@v3

    - name: Set build timestamp
      id: vars
      run: echo "BUILD_TAG=x86-64-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

    - name: Clone ImmortalWrt
      run: |
        git clone --depth=1 https://github.com/immortalwrt/immortalwrt openwrt
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Add custom packages from packages.list
      run: |
        cd openwrt
        while read -r pkg; do
          [[ "$pkg" =~ ^#.*$ || -z "$pkg" ]] && continue
          ./scripts/feeds install "$pkg"
        done < ../packages.list

    - name: Copy local IPK packages
      run: |
        mkdir -p openwrt/files/packages
        cp packages/*.ipk openwrt/files/packages/ || echo "No local IPKs found."

    - name: Inject uci-custom script
      run: |
        mkdir -p openwrt/files/etc/uci-defaults
        cp uci-custom openwrt/files/etc/uci-defaults/99-custom-settings
        chmod +x openwrt/files/etc/uci-defaults/99-custom-settings

    - name: Configure build
      run: |
        cd openwrt
        make defconfig
        echo -e "\nCONFIG_TARGET_x86=y\nCONFIG_TARGET_x86_64=y\nCONFIG_TARGET_ROOTFS_PARTSIZE=1024" >> .config
        make defconfig

    - name: Build firmware
      run: |
        cd openwrt
        make -j$(nproc) download
        make -j$(nproc) || make -j1 V=s

    - name: Upload firmware to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-x86-64
        path: |
          openwrt/bin/targets/x86/64/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.BUILD_TAG }}
        name: "ImmortalWrt x86-64 Build ${{ env.BUILD_TAG }}"
        files: openwrt/bin/targets/x86/64/*
