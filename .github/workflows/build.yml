name: Build ImmortalWrt Firmware

on:
  workflow_dispatch:
  #push:
  #  branches:
  #    - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set variables
        run: |
          TARGET=x86
          SUBTARGET=64
          VERSION=24.10.3
          IB_ARCH=Linux-x86_64
          IB_NAME="immortalwrt-imagebuilder-${VERSION}-${TARGET}-${SUBTARGET}.${IB_ARCH}"
          IB_TAR="${IB_NAME}.tar.zst"
          ROOTFS_PARTSIZE=1024
          {
            echo "TARGET=${TARGET}"
            echo "SUBTARGET=${SUBTARGET}"
            echo "VERSION=${VERSION}"
            echo "IB_ARCH=${IB_ARCH}"
            echo "IB_NAME=${IB_NAME}"
            echo "IB_TAR=${IB_TAR}"
            echo "ROOTFS_PARTSIZE=${ROOTFS_PARTSIZE}"
          } >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential libncurses5-dev gawk git wget unzip file libssl-dev python3 zstd \
            qemu-utils genisoimage grub2 busybox
          busybox --list | grep -q '^ash$' || (echo "busybox ash missing" && exit 1)

      - name: Cache ImageBuilder archive
        id: cache-ib
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/${{ env.IB_TAR }}
          key: ib-${{ env.VERSION }}-${{ env.TARGET }}-${{ env.SUBTARGET }}

      - name: Download ImageBuilder
        if: steps.cache-ib.outputs.cache-hit != 'true'
        run: |
          wget -O "${{ runner.temp }}/${{ env.IB_TAR }}" \
            "https://downloads.immortalwrt.org/releases/${{ env.VERSION }}/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${{ env.IB_TAR }}"

      - name: Extract ImageBuilder
        run: |
          tar -I zstd -xf "${{ runner.temp }}/${{ env.IB_TAR }}"
          mv "${{ env.IB_NAME }}" imagebuilder

      - name: Prepare custom files
        run: |
          mkdir -p imagebuilder/files/etc/uci-defaults
          install -m 0755 uci-custom imagebuilder/files/etc/uci-defaults/99-custom-network
          mkdir -p imagebuilder/packages
          cp packages/*.ipk imagebuilder/packages/ || true

      - name: Add feed (nikki)
        working-directory: imagebuilder
        run: |
          wget -O - "https://github.com/nikkinikki-org/OpenWrt-nikki/raw/refs/heads/main/feed.sh" | busybox ash
          # To pin to a specific commit for reproducibility, replace refs/heads/main with the commit SHA.

      - name: Resolve package list
        id: pkgs
        run: |
          if [ -f packages.list ]; then
            PKGS=$(tr '\n' ' ' < packages.list | xargs)
          else
            PKGS=""
          fi
          echo "PKGS=${PKGS}" >> $GITHUB_ENV
          echo "Packages: ${PKGS}"

      - name: Build firmware
        working-directory: imagebuilder
        run: |
          make image \
            PACKAGES="${PKGS}" \
            FILES="files" \
            ROOTFS_PARTSIZE=${{ env.ROOTFS_PARTSIZE }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-firmware
          path: imagebuilder/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*
          if-no-files-found: error
          retention-days: 14

      - name: Generate tag name
        id: tag
        run: |
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "TAG=auto-${DATE}-${SHORT_SHA}" >> $GITHUB_ENV
          echo "Generated tag: auto-${DATE}-${SHORT_SHA}"

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "ImmortalWrt Firmware ${{ env.TAG }}"
          draft: false
          prerelease: false
          files: imagebuilder/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/*
