name: Build ImmortalWrt with Nikki and Custom Packages

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
  schedule:
    - cron: "0 19 * * *"   # 每天 UTC 19 点触发，相当于北京时间次日凌晨 3 点

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout user repo
        uses: actions/checkout@v4

      - name: Checkout ImmortalWrt source
        uses: actions/checkout@v4
        with:
          repository: immortalwrt/immortalwrt
          ref: v24.10.3
          path: immortalwrt-src

      - name: Update ImmortalWrt source
        working-directory: immortalwrt-src
        run: |
          git fetch --all
          git pull --ff-only || true

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /opt/hostedtoolcache/CodeQL
          df -h

      # 添加 feeds：luci + packages + nikki
      - name: Add extra feeds
        working-directory: immortalwrt-src
        run: |
          echo "src-git luci https://github.com/openwrt/luci.git;openwrt-24.10" >> feeds.conf.default
          echo "src-git packages https://github.com/openwrt/packages.git;openwrt-24.10" >> feeds.conf.default
          echo "src-git nikki https://github.com/nikkinikki-org/OpenWrt-nikki.git;main" >> feeds.conf.default
          cat feeds.conf.default

      - name: Update & install feeds
        working-directory: immortalwrt-src
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configure build
        working-directory: immortalwrt-src
        run: |
          make defconfig

          # 从用户仓库的 packages.list 读取插件
          if [ -f $GITHUB_WORKSPACE/packages.list ]; then
            while read -r pkg; do
              [ -n "$pkg" ] && echo "CONFIG_PACKAGE_${pkg}=y" >> .config
            done < $GITHUB_WORKSPACE/packages.list
          fi

          # Nikki 包
          echo "CONFIG_PACKAGE_nikki=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-nikki=y" >> .config
          echo "CONFIG_PACKAGE_luci-i18n-nikki-zh-cn=y" >> .config

          # dnsmasq-full 替换 dnsmasq
          echo "CONFIG_PACKAGE_dnsmasq=n" >> .config
          echo "CONFIG_PACKAGE_dnsmasq-full=y" >> .config

          # 设置 ROOTFS_PARTSIZE=1024 (1GB)
          echo "CONFIG_TARGET_ROOTFS_PARTSIZE=1024" >> .config

          # 禁用缺失依赖的包（避免编译失败）
          echo "CONFIG_PACKAGE_autocore=n" >> .config
          echo "CONFIG_PACKAGE_autosamba=n" >> .config
          echo "CONFIG_PACKAGE_default-settings=n" >> .config
          echo "CONFIG_PACKAGE_audit=n" >> .config
          echo "CONFIG_PACKAGE_policycoreutils=n" >> .config
          echo "CONFIG_PACKAGE_pcat-manager=n" >> .config
          echo "CONFIG_PACKAGE_lldpd=n" >> .config
          echo "CONFIG_PACKAGE_kexec-tools=n" >> .config

          make defconfig

      - name: Prepare custom files (uci-custom)
        working-directory: immortalwrt-src
        run: |
          mkdir -p files/etc/uci-defaults
          cp $GITHUB_WORKSPACE/uci-custom files/etc/uci-defaults/99-custom-network
          chmod 0755 files/etc/uci-defaults/99-custom-network

      - name: Cache downloads
        uses: actions/cache@v4
        with:
          path: immortalwrt-src/dl
          key: ${{ runner.os }}-immortalwrt-dl-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-immortalwrt-dl-

      - name: Build firmware
        working-directory: immortalwrt-src
        run: |
          make -j$(nproc) || make -j1 V=s

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-nikki
          path: immortalwrt-src/bin/targets/**/*
          if-no-files-found: error
          retention-days: 14

      - name: Generate tag name
        id: tag
        run: |
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          TAG="auto-${DATE}-${SHORT_SHA}"
          echo "TAG=${TAG}" >> $GITHUB_ENV
          echo "Generated tag: ${TAG}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "ImmortalWrt Firmware ${{ env.TAG }}"
          draft: false
          prerelease: false
          files: immortalwrt-src/bin/targets/**/*
          overwrite_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete old releases
        uses: dev-drprasad/delete-older-releases@v0.3.3
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
