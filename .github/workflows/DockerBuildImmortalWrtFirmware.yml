name: Docker-Build-ImmortalWrt-Firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [x86]
        subtarget: [64]
        rootfs: [1024]
        version: [24.10.3]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /opt/hostedtoolcache/CodeQL
          df -h

      - name: Pull ImmortalWrt ImageBuilder Docker image
        run: |
          docker pull immortalwrt/imagebuilder:x86-64-openwrt-${{ matrix.version }}

      - name: Prepare build directories
        run: |
          mkdir -p build_output
          mkdir -p custom_files/etc/uci-defaults
          cp uci-custom custom_files/etc/uci-defaults/99-custom-network
          mkdir -p custom_packages
          cp packages/*.ipk custom_packages/ || true

      - name: Run ImageBuilder inside Docker
        run: |
          PKGS=$(tr '\n' ' ' < packages.list)
          docker run --rm \
            -v ${{ github.workspace }}/build_output:/builder/bin \
            -v ${{ github.workspace }}/custom_files:/builder/files \
            -v ${{ github.workspace }}/custom_packages:/builder/packages \
            -v ${{ github.workspace }}/packages.list:/builder/packages.list \
            immortalwrt/imagebuilder:x86-64-openwrt-${{ matrix.version }} \
            /bin/bash -c "\
              cd /builder && \
              cd packages && opkg-make-index . > Packages && gzip -f Packages && cd .. && \
              make image \
                PACKAGES=\"\$PKGS\" \
                FILES=\"files\" \
                ROOTFS_PARTSIZE=${{ matrix.rootfs }} \
            "

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-${{ matrix.version }}-${{ matrix.target }}-${{ matrix.subtarget }}-rootfs${{ matrix.rootfs }}
          path: build_output/targets/${{ matrix.target }}/${{ matrix.subtarget }}/*

      - name: Generate tag name
        id: tag
        run: |
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "TAG=auto-${DATE}-${SHORT_SHA}" >> $GITHUB_ENV
          echo "Generated tag: auto-${DATE}-${SHORT_SHA}"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "ImmortalWrt Firmware ${{ env.TAG }}"
          draft: false
          prerelease: false
          files: build_output/targets/${{ matrix.target }}/${{ matrix.subtarget }}/*

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 2

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@master
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
