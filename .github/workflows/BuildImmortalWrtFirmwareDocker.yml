name: Build-ImmortalWrt-Firmware

on:
  workflow_dispatch:

jobs:
  # 先编译 nikki 相关包
  build-nikki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /opt/hostedtoolcache/CodeQL
          df -h

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git wget unzip \
            file libssl-dev python3 zstd qemu-utils

      - name: Download SDK
        run: |
          wget https://downloads.immortalwrt.org/releases/24.10.3/targets/x86/64/immortalwrt-sdk-24.10.3-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          tar -xf immortalwrt-sdk-24.10.3-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz
          mv immortalwrt-sdk-24.10.3-x86-64_gcc-12.3.0_musl.Linux-x86_64 sdk

      - name: Build nikki packages
        working-directory: sdk
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install nikki luci-app-nikki luci-i18n-nikki-zh-cn
          make defconfig
          make package/nikki/compile V=s
          make package/luci-app-nikki/compile V=s
          make package/luci-i18n-nikki-zh-cn/compile V=s
          mkdir -p ../nikki-ipks
          find bin/packages/ -name "*nikki*.ipk" -exec cp {} ../nikki-ipks/ \;

      - name: Upload nikki ipks
        uses: actions/upload-artifact@v4
        with:
          name: nikki-ipks
          path: nikki-ipks/*

  # 再用 Docker ImageBuilder 构建固件
  build-firmware:
    runs-on: ubuntu-latest
    needs: build-nikki

    strategy:
      matrix:
        target: [x86]
        subtarget: [64]
        rootfs: [1024]
        version: [24.10.3]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /opt/hostedtoolcache/CodeQL
          df -h

      - name: Cache dl directory
        uses: actions/cache@v4
        with:
          path: build/dl
          key: dl-${{ runner.os }}-${{ matrix.version }}-${{ matrix.target }}-${{ matrix.subtarget }}
          restore-keys: |
            dl-${{ runner.os }}-

      - name: Download nikki ipks
        uses: actions/download-artifact@v4
        with:
          name: nikki-ipks
          path: build/packages

      - name: Prepare build context
        run: |
          mkdir -p build/files/etc/uci-defaults
          cp uci-custom build/files/etc/uci-defaults/99-custom-network
          cp packages/*.ipk build/packages/ || true
          cp packages.list build/

      - name: Run ImageBuilder in Docker
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/build:/builder \
            -v ${{ github.workspace }}/build/dl:/builder/dl \
            immortalwrt/imagebuilder:x86-64-openwrt-${{ matrix.version }} \
            bash -c "\
              PKGS=\$(tr '\n' ' ' < /builder/packages.list) && \
              make image \
                PACKAGES=\"\$PKGS\" \
                FILES=/builder/files \
                EXTRA_IMAGE_NAME=custom \
                ROOTFS_PARTSIZE=${{ matrix.rootfs }} \
                -j\$(nproc) \
                && cp -r bin/targets/* /builder/output"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-${{ matrix.version }}-${{ matrix.target }}-${{ matrix.subtarget }}-rootfs${{ matrix.rootfs }}
          path: build/output/**

      - name: Generate tag name
        id: tag
        run: |
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "TAG=auto-${DATE}-${SHORT_SHA}" >> $GITHUB_ENV
          echo "Generated tag: auto-${DATE}-${SHORT_SHA}"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "ImmortalWrt Firmware ${{ env.TAG }}"
          draft: false
          prerelease: false
          files: build/output/**

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 2

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@master
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
