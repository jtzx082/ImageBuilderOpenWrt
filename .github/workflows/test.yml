name: Build ImmortalWrt Firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev gawk git wget unzip \
            file libssl-dev python3 zstd qemu-utils genisoimage grub2 tar gzip binutils

      - name: 下载 ImageBuilder
        run: |
          wget https://downloads.immortalwrt.org/releases/24.10.3/targets/x86/64/immortalwrt-imagebuilder-24.10.3-x86-64.Linux-x86_64.tar.zst
          tar -I zstd -xf immortalwrt-imagebuilder-24.10.3-x86-64.Linux-x86_64.tar.zst
          mv immortalwrt-imagebuilder-24.10.3-x86-64.Linux-x86_64 imagebuilder

      - name: 准备覆盖文件
        run: |
          mkdir -p imagebuilder/files/etc/config
          # 如果仓库有 etc/config，就替换
          if [ -d "etc/config" ]; then
            rm -rf imagebuilder/files/etc/config
            cp -a etc/config imagebuilder/files/etc/
            chmod -R 0777 imagebuilder/files/etc/config
          fi
          # 如果有 uci-custom
          if [ -f "uci-custom" ]; then
            mkdir -p imagebuilder/files/etc/uci-defaults
            cp uci-custom imagebuilder/files/etc/uci-defaults/99-custom-network
            chmod 0777 imagebuilder/files/etc/uci-defaults/99-custom-network
          fi

      - name: 打包 nikki 为 ipk
        run: |
          mkdir -p imagebuilder/packages
          WORKDIR=$(mktemp -d)
          mkdir -p "$WORKDIR/CONTROL" "$WORKDIR/data/usr/bin"

          if [ -f "nikki" ]; then
            cp nikki "$WORKDIR/data/usr/bin/nikki"
            chmod 0777 "$WORKDIR/data/usr/bin/nikki"
          else
            echo "未找到 nikki 文件，跳过"
            exit 1
          fi

          cat > "$WORKDIR/CONTROL/control" << 'EOF'
Package: nikki
Version: 1.0
Architecture: all
Maintainer: CI
Section: utils
Priority: optional
Description: 本地 nikki 工具
EOF

          (cd "$WORKDIR" && tar -czf control.tar.gz -C CONTROL control)
          (cd "$WORKDIR" && tar -czf data.tar.gz -C data .)
          echo "2.0" > "$WORKDIR/debian-binary"
          (cd "$WORKDIR" && ar r nikki_1.0_all.ipk control.tar.gz data.tar.gz debian-binary)

          mv "$WORKDIR/nikki_1.0_all.ipk" imagebuilder/packages/

      - name: 构建固件
        working-directory: imagebuilder
        run: |
          # 如果没有 packages.list，就用空
          if [ -f ../packages.list ]; then
            PKGS="$(tr '\n' ' ' < ../packages.list)"
          else
            PKGS=""
          fi
          make image \
            PACKAGES="$PKGS nikki" \
            FILES="files" \
            ROOTFS_PARTSIZE=1024

      - name: 上传固件
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-firmware
          path: imagebuilder/bin/targets/x86/64/*
