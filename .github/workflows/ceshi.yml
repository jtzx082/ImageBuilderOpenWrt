name: Build ImmortalWrt Firmware(ceshi)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential libncurses5-dev gawk git wget unzip file libssl-dev \
            python3 zstd qemu-utils genisoimage grub2 coreutils

      - name: Download ImageBuilder
        run: |
          wget -q https://downloads.immortalwrt.org/releases/24.10.3/targets/x86/64/immortalwrt-imagebuilder-24.10.3-x86-64.Linux-x86_64.tar.zst
          tar -I zstd -xf immortalwrt-imagebuilder-24.10.3-x86-64.Linux-x86_64.tar.zst
          mv immortalwrt-imagebuilder-24.10.3-x86-64.Linux-x86_64 imagebuilder

      - name: Prepare overlay and external packages
        run: |
          mkdir -p imagebuilder/files/etc/uci-defaults
          cp uci-custom imagebuilder/files/etc/uci-defaults/99-custom-network

          mkdir -p imagebuilder/packages
          cp -n packages/*.ipk imagebuilder/packages/ || true

          mkdir -p imagebuilder/files/etc/config
          mkdir -p imagebuilder/files/usr/bin

      - name: Compile or prepare nikki
        run: |
          set -e
          if [ -f nikki.c ]; then
            echo "Compiling nikki.c -> nikki"
            gcc -O2 -s -o nikki nikki.c
          elif [ -f nikki ]; then
            echo "Using existing nikki file"
            chmod +x nikki || true
          else
            echo "ERROR: No nikki source or binary found" >&2
            exit 1
          fi

          cp nikki imagebuilder/files/usr/bin/nikki
          chmod 0777 imagebuilder/files/usr/bin/nikki
          sudo chown root:root imagebuilder/files/usr/bin/nikki

          if [ -f etc-config-nikki ]; then
            cp etc-config-nikki imagebuilder/files/etc/config/nikki
          elif [ -f nikki.config ]; then
            cp nikki.config imagebuilder/files/etc/config/nikki
          fi

          if [ -f imagebuilder/files/etc/config/nikki ]; then
            chmod 0777 imagebuilder/files/etc/config/nikki
            sudo chown root:root imagebuilder/files/etc/config/nikki
          fi

      - name: Sanitize packages list
        run: |
          awk 'NF && $1 !~ /^#/ {printf "%s ", $0}' packages.list > clean_packages.list
          cat clean_packages.list

      - name: Build firmware
        working-directory: imagebuilder
        run: |
          PKGS="$(cat ../clean_packages.list)"
          make image \
            PACKAGES="$PKGS" \
            FILES="files" \
            ROOTFS_PARTSIZE=1024
          sha256sum bin/targets/x86/64/* > bin/targets/x86/64/sha256sums.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-firmware
          path: imagebuilder/bin/targets/x86/64/*

      - name: Generate tag name
        id: tag
        run: |
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "TAG=auto-${DATE}-${SHORT_SHA}" >> $GITHUB_ENV
          echo "Generated tag: auto-${DATE}-${SHORT_SHA}"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "ImmortalWrt Firmware ${{ env.TAG }}"
          draft: false
          prerelease: false
          overwrite_files: true
          files: |
            imagebuilder/bin/targets/x86/64/*
