name: Build-ImmortalWrt-Firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [x86]
        subtarget: [64]
        rootfs: [1024]
        version: [24.10.3]
    env:
      IB_ARCH: Linux-x86_64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /opt/hostedtoolcache/CodeQL
          df -h

      # ✅ 修复：只缓存 .deb 文件，排除 lock 和 partial
      - name: Cache APT packages
        uses: actions/cache@v4
        with:
          path: .apt-cache/archives/*.deb
          key: apt-${{ runner.os }}-${{ matrix.version }}
          restore-keys: |
            apt-${{ runner.os }}-

      - name: Install dependencies
        run: |
          mkdir -p .apt-cache/archives/partial
          # 清理可能残留的锁文件，避免缓存报错
          rm -f .apt-cache/archives/lock
          sudo apt-get -o dir::cache::archives="$(pwd)/.apt-cache/archives" update
          sudo apt-get -o dir::cache::archives="$(pwd)/.apt-cache/archives" install -y \
            build-essential libncurses5-dev gawk git wget unzip \
            file libssl-dev python3 zstd qemu-utils genisoimage grub2

      - name: Cache ImageBuilder tarball
        uses: actions/cache@v4
        with:
          path: .cache/ib
          key: ib-tar-${{ runner.os }}-${{ matrix.version }}-${{ matrix.target }}-${{ matrix.subtarget }}
          restore-keys: |
            ib-tar-${{ runner.os }}-${{ matrix.version }}-

      - name: Download ImageBuilder
        run: |
          mkdir -p .cache/ib
          IB_TARBALL=immortalwrt-imagebuilder-${{ matrix.version }}-${{ matrix.target }}-${{ matrix.subtarget }}.${{ env.IB_ARCH }}.tar.zst
          IB_URL=https://downloads.immortalwrt.org/releases/${{ matrix.version }}/targets/${{ matrix.target }}/${{ matrix.subtarget }}
          if [ ! -f ".cache/ib/${IB_TARBALL}" ]; then
            wget -O ".cache/ib/${IB_TARBALL}" "${IB_URL}/${IB_TARBALL}"
          fi
          tar -I zstd -xf ".cache/ib/${IB_TARBALL}"
          mv immortalwrt-imagebuilder-${{ matrix.version }}-${{ matrix.target }}-${{ matrix.subtarget }}.${{ env.IB_ARCH }} imagebuilder

      - name: Cache ImageBuilder work dirs
        uses: actions/cache@v4
        with:
          path: |
            imagebuilder/dl
            imagebuilder/build_dir
            imagebuilder/packages
          key: ib-work-${{ runner.os }}-${{ matrix.version }}-${{ matrix.target }}-${{ matrix.subtarget }}-${{ hashFiles('packages.list') }}
          restore-keys: |
            ib-work-${{ runner.os }}-${{ matrix.version }}-${{ matrix.target }}-${{ matrix.subtarget }}-

      - name: Prepare custom files
        run: |
          mkdir -p imagebuilder/files/etc/uci-defaults
          cp uci-custom imagebuilder/files/etc/uci-defaults/99-custom-network
          mkdir -p imagebuilder/packages
          cp packages/*.ipk imagebuilder/packages/ || true

      - name: Build firmware
        working-directory: imagebuilder
        run: |
          PKGS=$(tr '\n' ' ' < ../packages.list)
          make image \
            PACKAGES="$PKGS" \
            FILES="files" \
            ROOTFS_PARTSIZE=${{ matrix.rootfs }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: immortalwrt-${{ matrix.version }}-${{ matrix.target }}-${{ matrix.subtarget }}-rootfs${{ matrix.rootfs }}
          path: imagebuilder/bin/targets/${{ matrix.target }}/${{ matrix.subtarget }}/*

      - name: Generate tag name
        id: tag
        run: |
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          echo "TAG=auto-${DATE}-${SHORT_SHA}" >> $GITHUB_ENV
          echo "Generated tag: auto-${DATE}-${SHORT_SHA}"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: "ImmortalWrt Firmware ${{ env.TAG }}"
          draft: false
          prerelease: false
          files: imagebuilder/bin/targets/${{ matrix.target }}/${{ matrix.subtarget }}/*

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 2

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@master
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
